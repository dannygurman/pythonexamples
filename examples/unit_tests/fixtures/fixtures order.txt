Higher-scoped fixtures are instantiated first
Within a function request for features, fixture of higher-scopes (such as session) are instantiated first than
lower-scoped fixtures (such as function or class).
 The relative order of fixtures of same scope follows the declared order in the test function and honours dependencies between fixtures.

Consider the code below:

@pytest.fixture(scope="session")
def s1():
    pass


@pytest.fixture(scope="module")
def m1():
    pass


@pytest.fixture
def f1(tmpdir):
    pass


@pytest.fixture
def f2():
    pass


def test_foo(f1, m1, f2, s1):
    ...
The fixtures requested by test_foo will be instantiated in the following order:

s1: is the highest-scoped fixture (session).

m1: is the second highest-scoped fixture (module).

tmpdir: is a function-scoped fixture, required by f1: it needs to be instantiated at this point because it is a dependency of f1.

f1: is the first function-scoped fixture in test_foo parameter list.

f2: is the last function-scoped fixture in test_foo parameter list.